"use strict";var precacheConfig=[["/face-detect-app/index.html","dd10bdce66e819933928e45336727213"],["/face-detect-app/static/css/main.b2d3f099.css","c42a1dcbf0ca3e12c296568de9d4277a"],["/face-detect-app/static/js/main.7b86e264.js","9064357ac8ce0e77281e6aa9ec4e4741"],["/face-detect-app/static/media/logo.9ca73882.svg","9ca73882c31515c5de84407841f5e15d"],["/face-detect-app/static/media/robot.589da138.png","589da1380967f7c20d388c092b833b5e"],["/face-detect-app/static/media/robotaur.c16ca397.woff","c16ca397ca36028f946f828e788ad204"],["/face-detect-app/static/media/robotaur3d.a1a6fca4.woff","a1a6fca49cb4d537e17bb1456458e3c9"],["/face-detect-app/static/media/robotaur3di.da9d6419.woff","da9d64199b17bb4dd2d34fd9060670ab"],["/face-detect-app/static/media/robotaura.85159af9.woff","85159af9a5f54ed6315a3afc8d76f86b"],["/face-detect-app/static/media/robotaurai.f84ed1d7.woff","f84ed1d788d6af9db184df5a3ae61efd"],["/face-detect-app/static/media/robotaurc.409218e3.woff","409218e34e02e21939be8aec1bb119e0"],["/face-detect-app/static/media/robotaurci.17f74c5a.woff","17f74c5a3747fa8d656a35305f391d69"],["/face-detect-app/static/media/robotaure.d5b9f4f7.woff","d5b9f4f730097ecd9ef0d86d2d7c6565"],["/face-detect-app/static/media/robotaurei.feea79fb.woff","feea79fb4a91bc687ed9dcd96819d498"],["/face-detect-app/static/media/robotauri.caf6d2e2.woff","caf6d2e276c9bcfc1f32894d7c3baa4a"],["/face-detect-app/static/media/robotaurleft.86f55004.woff","86f55004f02037686f6f08a30a62ffd3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,c){var r=new URL(e);return c&&r.pathname.match(c)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),r=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,c),e=urlsToCacheKeys.has(a));var r="/face-detect-app/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});